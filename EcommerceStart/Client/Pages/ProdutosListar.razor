@page "/produtoslistar"
@using EcommerceStart.Shared.Models
@inject HttpClient httpClient


<h3 class="text-center">Lista de produtos</h3>

<div class="p-3 shadow d-flex justify-content-center">
    <label class="text-muted p-2">
        Encontre o produto pelo nome:
        <input class="form-control" @bind-value="encontrarProduto" />
    </label>
    <button class="btn btn-primary" @onclick="Carregar">Carregar</button>
</div>


<div class="text-center p-3">
    <table class="table" style="font-family:Roboto">
        <tr>
            <td class="border p-2">#</td>
            <td class="border p-2">Nome</td>
            <td class="border p-2">Preço</td>
            <td class="border p-2">Quantidade</td>
            <td class="border p-2">imagem</td>
        </tr>
        @if (produtos != null)
        {
            @foreach (Produto produto in produtos)
            {
                <tr>
                    <td class="border p-2">@produto.Id</td>
                    <td class="border p-2">@produto.Nome</td>
                    <td class="border p-2">@produto.Preco</td>
                    <td class="border p-2">@produto.Quantidade</td>
                    <td class="border p-2">
                        <img src="@produto.Imagem" class="w-25" alt="Imagem do produto"/>
                    </td>
                </tr>
            }
        }

    </table>
</div>



<div class="text-danger p-3 text-center">
    @msg
</div>

@code {
    Produto produto = new();
    string msg = string.Empty;
    string encontrarProduto = string.Empty;
    private List<Produto>? produtos = new();

    protected async Task Carregar()
    {
        string api = "api/produtos/listar";
        if (!string.IsNullOrEmpty(encontrarProduto))
        {
            api = $"api/produtos/listar?nome={encontrarProduto}";
        }

        var response = await httpClient.GetAsync(api);
        if (response.IsSuccessStatusCode)
        {
            produtos = await response.Content.ReadFromJsonAsync<List<Produto>>();

        }
        else
        {
            msg = await response.Content.ReadAsStringAsync();
        }
    }

}
